// Code generated by goa v3.2.4, DO NOT EDIT.
//
// user_service client
//
// Command:
// $ goa gen github.com/SantoshSah/user-service-sample/design

package userservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "user_service" service client.
type Client struct {
	SignupEndpoint                   goa.Endpoint
	VerifyConfirmationTokenEndpoint  goa.Endpoint
	UpdateUsernameEndpoint           goa.Endpoint
	VerifyPasswordResetTokenEndpoint goa.Endpoint
	ResetPasswordEndpoint            goa.Endpoint
	ChangePasswordEndpoint           goa.Endpoint
	LoginEndpoint                    goa.Endpoint
	RefreshAccessTokenEndpoint       goa.Endpoint
	LogoutEndpoint                   goa.Endpoint
	ListUsersEndpoint                goa.Endpoint
}

// NewClient initializes a "user_service" service client given the endpoints.
func NewClient(signup, verifyConfirmationToken, updateUsername, verifyPasswordResetToken, resetPassword, changePassword, login, refreshAccessToken, logout, listUsers goa.Endpoint) *Client {
	return &Client{
		SignupEndpoint:                   signup,
		VerifyConfirmationTokenEndpoint:  verifyConfirmationToken,
		UpdateUsernameEndpoint:           updateUsername,
		VerifyPasswordResetTokenEndpoint: verifyPasswordResetToken,
		ResetPasswordEndpoint:            resetPassword,
		ChangePasswordEndpoint:           changePassword,
		LoginEndpoint:                    login,
		RefreshAccessTokenEndpoint:       refreshAccessToken,
		LogoutEndpoint:                   logout,
		ListUsersEndpoint:                listUsers,
	}
}

// Signup calls the "signup" endpoint of the "user_service" service.
// Signup may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Signup(ctx context.Context, p *SignupPayload) (res *Userresult, err error) {
	var ires interface{}
	ires, err = c.SignupEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Userresult), nil
}

// VerifyConfirmationToken calls the "verifyConfirmationToken" endpoint of the
// "user_service" service.
// VerifyConfirmationToken may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) VerifyConfirmationToken(ctx context.Context, p *VerifyConfirmationTokenPayload) (res *Userresult, err error) {
	var ires interface{}
	ires, err = c.VerifyConfirmationTokenEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Userresult), nil
}

// UpdateUsername calls the "updateUsername" endpoint of the "user_service"
// service.
// UpdateUsername may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) UpdateUsername(ctx context.Context, p *UpdateUsernamePayload) (res *Userresult, err error) {
	var ires interface{}
	ires, err = c.UpdateUsernameEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Userresult), nil
}

// VerifyPasswordResetToken calls the "verifyPasswordResetToken" endpoint of
// the "user_service" service.
// VerifyPasswordResetToken may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) VerifyPasswordResetToken(ctx context.Context, p *VerifyPasswordResetTokenPayload) (res *Userresult, err error) {
	var ires interface{}
	ires, err = c.VerifyPasswordResetTokenEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Userresult), nil
}

// ResetPassword calls the "resetPassword" endpoint of the "user_service"
// service.
// ResetPassword may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) ResetPassword(ctx context.Context, p *ResetPasswordPayload) (res *Userresult, err error) {
	var ires interface{}
	ires, err = c.ResetPasswordEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Userresult), nil
}

// ChangePassword calls the "changePassword" endpoint of the "user_service"
// service.
// ChangePassword may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) ChangePassword(ctx context.Context, p *ChangePasswordPayload) (res *Userresult, err error) {
	var ires interface{}
	ires, err = c.ChangePasswordEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Userresult), nil
}

// Login calls the "login" endpoint of the "user_service" service.
// Login may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Login(ctx context.Context, p *LoginPayload) (res *Userresult, err error) {
	var ires interface{}
	ires, err = c.LoginEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Userresult), nil
}

// RefreshAccessToken calls the "refreshAccessToken" endpoint of the
// "user_service" service.
// RefreshAccessToken may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) RefreshAccessToken(ctx context.Context, p *RefreshAccessTokenPayload) (res *Userresult, err error) {
	var ires interface{}
	ires, err = c.RefreshAccessTokenEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Userresult), nil
}

// Logout calls the "logout" endpoint of the "user_service" service.
// Logout may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Logout(ctx context.Context, p *LogoutPayload) (res *MessageResult, err error) {
	var ires interface{}
	ires, err = c.LogoutEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MessageResult), nil
}

// ListUsers calls the "listUsers" endpoint of the "user_service" service.
// ListUsers may return the following errors:
//	- "NotFound" (type *goa.ServiceError)
//	- "BadRequest" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) ListUsers(ctx context.Context, p *ListUsersPayload) (res *ListUsersResult, err error) {
	var ires interface{}
	ires, err = c.ListUsersEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListUsersResult), nil
}
