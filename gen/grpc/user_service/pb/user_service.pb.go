// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_service.proto

package user_servicepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignupRequest struct {
	// User email address
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignupRequest) Reset()         { *m = SignupRequest{} }
func (m *SignupRequest) String() string { return proto.CompactTextString(m) }
func (*SignupRequest) ProtoMessage()    {}
func (*SignupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{0}
}

func (m *SignupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignupRequest.Unmarshal(m, b)
}
func (m *SignupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignupRequest.Marshal(b, m, deterministic)
}
func (m *SignupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignupRequest.Merge(m, src)
}
func (m *SignupRequest) XXX_Size() int {
	return xxx_messageInfo_SignupRequest.Size(m)
}
func (m *SignupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignupRequest proto.InternalMessageInfo

func (m *SignupRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignupRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type SignupResponse struct {
	// User UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If user has been verified
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user is active
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user has agreed terms & conditions
	HasAgreed bool `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// AccessToken to authenticate user for next processes
	AccessToken string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken to refresh auth token
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// User roles
	Roles                *UserroleresultCollection `protobuf:"bytes,9,opt,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SignupResponse) Reset()         { *m = SignupResponse{} }
func (m *SignupResponse) String() string { return proto.CompactTextString(m) }
func (*SignupResponse) ProtoMessage()    {}
func (*SignupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{1}
}

func (m *SignupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignupResponse.Unmarshal(m, b)
}
func (m *SignupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignupResponse.Marshal(b, m, deterministic)
}
func (m *SignupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignupResponse.Merge(m, src)
}
func (m *SignupResponse) XXX_Size() int {
	return xxx_messageInfo_SignupResponse.Size(m)
}
func (m *SignupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignupResponse proto.InternalMessageInfo

func (m *SignupResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SignupResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignupResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SignupResponse) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *SignupResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *SignupResponse) GetHasAgreed() bool {
	if m != nil {
		return m.HasAgreed
	}
	return false
}

func (m *SignupResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *SignupResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *SignupResponse) GetRoles() *UserroleresultCollection {
	if m != nil {
		return m.Roles
	}
	return nil
}

type UserroleresultCollection struct {
	Field                []*Userroleresult `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserroleresultCollection) Reset()         { *m = UserroleresultCollection{} }
func (m *UserroleresultCollection) String() string { return proto.CompactTextString(m) }
func (*UserroleresultCollection) ProtoMessage()    {}
func (*UserroleresultCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{2}
}

func (m *UserroleresultCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserroleresultCollection.Unmarshal(m, b)
}
func (m *UserroleresultCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserroleresultCollection.Marshal(b, m, deterministic)
}
func (m *UserroleresultCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserroleresultCollection.Merge(m, src)
}
func (m *UserroleresultCollection) XXX_Size() int {
	return xxx_messageInfo_UserroleresultCollection.Size(m)
}
func (m *UserroleresultCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_UserroleresultCollection.DiscardUnknown(m)
}

var xxx_messageInfo_UserroleresultCollection proto.InternalMessageInfo

func (m *UserroleresultCollection) GetField() []*Userroleresult {
	if m != nil {
		return m.Field
	}
	return nil
}

type Userroleresult struct {
	// UserRole UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User UUID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Role UUID
	RoleId string `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// If record is active
	IsActive bool `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// role detail
	Role                 *Roleresult `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Userroleresult) Reset()         { *m = Userroleresult{} }
func (m *Userroleresult) String() string { return proto.CompactTextString(m) }
func (*Userroleresult) ProtoMessage()    {}
func (*Userroleresult) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{3}
}

func (m *Userroleresult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Userroleresult.Unmarshal(m, b)
}
func (m *Userroleresult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Userroleresult.Marshal(b, m, deterministic)
}
func (m *Userroleresult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Userroleresult.Merge(m, src)
}
func (m *Userroleresult) XXX_Size() int {
	return xxx_messageInfo_Userroleresult.Size(m)
}
func (m *Userroleresult) XXX_DiscardUnknown() {
	xxx_messageInfo_Userroleresult.DiscardUnknown(m)
}

var xxx_messageInfo_Userroleresult proto.InternalMessageInfo

func (m *Userroleresult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Userroleresult) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Userroleresult) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *Userroleresult) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Userroleresult) GetRole() *Roleresult {
	if m != nil {
		return m.Role
	}
	return nil
}

type Roleresult struct {
	// role UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// role name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// service UUID the role belongs to
	ServiceId string `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// If record is active
	IsActive             bool     `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Roleresult) Reset()         { *m = Roleresult{} }
func (m *Roleresult) String() string { return proto.CompactTextString(m) }
func (*Roleresult) ProtoMessage()    {}
func (*Roleresult) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{4}
}

func (m *Roleresult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Roleresult.Unmarshal(m, b)
}
func (m *Roleresult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Roleresult.Marshal(b, m, deterministic)
}
func (m *Roleresult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Roleresult.Merge(m, src)
}
func (m *Roleresult) XXX_Size() int {
	return xxx_messageInfo_Roleresult.Size(m)
}
func (m *Roleresult) XXX_DiscardUnknown() {
	xxx_messageInfo_Roleresult.DiscardUnknown(m)
}

var xxx_messageInfo_Roleresult proto.InternalMessageInfo

func (m *Roleresult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Roleresult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Roleresult) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *Roleresult) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type VerifyConfirmationTokenRequest struct {
	// UserId
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Confirmation token
	ConfirmationToken uint64 `protobuf:"varint,2,opt,name=confirmation_token,json=confirmationToken,proto3" json:"confirmation_token,omitempty"`
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyConfirmationTokenRequest) Reset()         { *m = VerifyConfirmationTokenRequest{} }
func (m *VerifyConfirmationTokenRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyConfirmationTokenRequest) ProtoMessage()    {}
func (*VerifyConfirmationTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{5}
}

func (m *VerifyConfirmationTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyConfirmationTokenRequest.Unmarshal(m, b)
}
func (m *VerifyConfirmationTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyConfirmationTokenRequest.Marshal(b, m, deterministic)
}
func (m *VerifyConfirmationTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyConfirmationTokenRequest.Merge(m, src)
}
func (m *VerifyConfirmationTokenRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyConfirmationTokenRequest.Size(m)
}
func (m *VerifyConfirmationTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyConfirmationTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyConfirmationTokenRequest proto.InternalMessageInfo

func (m *VerifyConfirmationTokenRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *VerifyConfirmationTokenRequest) GetConfirmationToken() uint64 {
	if m != nil {
		return m.ConfirmationToken
	}
	return 0
}

func (m *VerifyConfirmationTokenRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type VerifyConfirmationTokenResponse struct {
	// User UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If user has been verified
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user is active
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user has agreed terms & conditions
	HasAgreed bool `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// AccessToken to authenticate user for next processes
	AccessToken string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken to refresh auth token
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// User roles
	Roles                *UserroleresultCollection `protobuf:"bytes,9,opt,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *VerifyConfirmationTokenResponse) Reset()         { *m = VerifyConfirmationTokenResponse{} }
func (m *VerifyConfirmationTokenResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyConfirmationTokenResponse) ProtoMessage()    {}
func (*VerifyConfirmationTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{6}
}

func (m *VerifyConfirmationTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyConfirmationTokenResponse.Unmarshal(m, b)
}
func (m *VerifyConfirmationTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyConfirmationTokenResponse.Marshal(b, m, deterministic)
}
func (m *VerifyConfirmationTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyConfirmationTokenResponse.Merge(m, src)
}
func (m *VerifyConfirmationTokenResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyConfirmationTokenResponse.Size(m)
}
func (m *VerifyConfirmationTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyConfirmationTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyConfirmationTokenResponse proto.InternalMessageInfo

func (m *VerifyConfirmationTokenResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VerifyConfirmationTokenResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *VerifyConfirmationTokenResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VerifyConfirmationTokenResponse) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *VerifyConfirmationTokenResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *VerifyConfirmationTokenResponse) GetHasAgreed() bool {
	if m != nil {
		return m.HasAgreed
	}
	return false
}

func (m *VerifyConfirmationTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *VerifyConfirmationTokenResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *VerifyConfirmationTokenResponse) GetRoles() *UserroleresultCollection {
	if m != nil {
		return m.Roles
	}
	return nil
}

type UpdateUsernameRequest struct {
	// User name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUsernameRequest) Reset()         { *m = UpdateUsernameRequest{} }
func (m *UpdateUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUsernameRequest) ProtoMessage()    {}
func (*UpdateUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{7}
}

func (m *UpdateUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUsernameRequest.Unmarshal(m, b)
}
func (m *UpdateUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUsernameRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUsernameRequest.Merge(m, src)
}
func (m *UpdateUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUsernameRequest.Size(m)
}
func (m *UpdateUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUsernameRequest proto.InternalMessageInfo

func (m *UpdateUsernameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateUsernameRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type UpdateUsernameResponse struct {
	// User UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If user has been verified
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user is active
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user has agreed terms & conditions
	HasAgreed bool `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// AccessToken to authenticate user for next processes
	AccessToken string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken to refresh auth token
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// User roles
	Roles                *UserroleresultCollection `protobuf:"bytes,9,opt,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateUsernameResponse) Reset()         { *m = UpdateUsernameResponse{} }
func (m *UpdateUsernameResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateUsernameResponse) ProtoMessage()    {}
func (*UpdateUsernameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{8}
}

func (m *UpdateUsernameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUsernameResponse.Unmarshal(m, b)
}
func (m *UpdateUsernameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUsernameResponse.Marshal(b, m, deterministic)
}
func (m *UpdateUsernameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUsernameResponse.Merge(m, src)
}
func (m *UpdateUsernameResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateUsernameResponse.Size(m)
}
func (m *UpdateUsernameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUsernameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUsernameResponse proto.InternalMessageInfo

func (m *UpdateUsernameResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateUsernameResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateUsernameResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateUsernameResponse) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *UpdateUsernameResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *UpdateUsernameResponse) GetHasAgreed() bool {
	if m != nil {
		return m.HasAgreed
	}
	return false
}

func (m *UpdateUsernameResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *UpdateUsernameResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *UpdateUsernameResponse) GetRoles() *UserroleresultCollection {
	if m != nil {
		return m.Roles
	}
	return nil
}

type VerifyPasswordResetTokenRequest struct {
	// UserId
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Password reset token
	PasswordResetToken uint64 `protobuf:"varint,2,opt,name=password_reset_token,json=passwordResetToken,proto3" json:"password_reset_token,omitempty"`
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyPasswordResetTokenRequest) Reset()         { *m = VerifyPasswordResetTokenRequest{} }
func (m *VerifyPasswordResetTokenRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyPasswordResetTokenRequest) ProtoMessage()    {}
func (*VerifyPasswordResetTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{9}
}

func (m *VerifyPasswordResetTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyPasswordResetTokenRequest.Unmarshal(m, b)
}
func (m *VerifyPasswordResetTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyPasswordResetTokenRequest.Marshal(b, m, deterministic)
}
func (m *VerifyPasswordResetTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyPasswordResetTokenRequest.Merge(m, src)
}
func (m *VerifyPasswordResetTokenRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyPasswordResetTokenRequest.Size(m)
}
func (m *VerifyPasswordResetTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyPasswordResetTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyPasswordResetTokenRequest proto.InternalMessageInfo

func (m *VerifyPasswordResetTokenRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *VerifyPasswordResetTokenRequest) GetPasswordResetToken() uint64 {
	if m != nil {
		return m.PasswordResetToken
	}
	return 0
}

func (m *VerifyPasswordResetTokenRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type VerifyPasswordResetTokenResponse struct {
	// User UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If user has been verified
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user is active
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user has agreed terms & conditions
	HasAgreed bool `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// AccessToken to authenticate user for next processes
	AccessToken string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken to refresh auth token
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// User roles
	Roles                *UserroleresultCollection `protobuf:"bytes,9,opt,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *VerifyPasswordResetTokenResponse) Reset()         { *m = VerifyPasswordResetTokenResponse{} }
func (m *VerifyPasswordResetTokenResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyPasswordResetTokenResponse) ProtoMessage()    {}
func (*VerifyPasswordResetTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{10}
}

func (m *VerifyPasswordResetTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyPasswordResetTokenResponse.Unmarshal(m, b)
}
func (m *VerifyPasswordResetTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyPasswordResetTokenResponse.Marshal(b, m, deterministic)
}
func (m *VerifyPasswordResetTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyPasswordResetTokenResponse.Merge(m, src)
}
func (m *VerifyPasswordResetTokenResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyPasswordResetTokenResponse.Size(m)
}
func (m *VerifyPasswordResetTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyPasswordResetTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyPasswordResetTokenResponse proto.InternalMessageInfo

func (m *VerifyPasswordResetTokenResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VerifyPasswordResetTokenResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *VerifyPasswordResetTokenResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VerifyPasswordResetTokenResponse) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *VerifyPasswordResetTokenResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *VerifyPasswordResetTokenResponse) GetHasAgreed() bool {
	if m != nil {
		return m.HasAgreed
	}
	return false
}

func (m *VerifyPasswordResetTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *VerifyPasswordResetTokenResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *VerifyPasswordResetTokenResponse) GetRoles() *UserroleresultCollection {
	if m != nil {
		return m.Roles
	}
	return nil
}

type ResetPasswordRequest struct {
	// User email
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPasswordRequest) Reset()         { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()    {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{11}
}

func (m *ResetPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordRequest.Unmarshal(m, b)
}
func (m *ResetPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ResetPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordRequest.Merge(m, src)
}
func (m *ResetPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordRequest.Size(m)
}
func (m *ResetPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordRequest proto.InternalMessageInfo

func (m *ResetPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ResetPasswordRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ResetPasswordResponse struct {
	// User UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If user has been verified
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user is active
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user has agreed terms & conditions
	HasAgreed bool `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// AccessToken to authenticate user for next processes
	AccessToken string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken to refresh auth token
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// User roles
	Roles                *UserroleresultCollection `protobuf:"bytes,9,opt,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ResetPasswordResponse) Reset()         { *m = ResetPasswordResponse{} }
func (m *ResetPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ResetPasswordResponse) ProtoMessage()    {}
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{12}
}

func (m *ResetPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPasswordResponse.Unmarshal(m, b)
}
func (m *ResetPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPasswordResponse.Marshal(b, m, deterministic)
}
func (m *ResetPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPasswordResponse.Merge(m, src)
}
func (m *ResetPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ResetPasswordResponse.Size(m)
}
func (m *ResetPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPasswordResponse proto.InternalMessageInfo

func (m *ResetPasswordResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ResetPasswordResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ResetPasswordResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResetPasswordResponse) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *ResetPasswordResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *ResetPasswordResponse) GetHasAgreed() bool {
	if m != nil {
		return m.HasAgreed
	}
	return false
}

func (m *ResetPasswordResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ResetPasswordResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *ResetPasswordResponse) GetRoles() *UserroleresultCollection {
	if m != nil {
		return m.Roles
	}
	return nil
}

type ChangePasswordRequest struct {
	// User password
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{13}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ChangePasswordRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ChangePasswordResponse struct {
	// User UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If user has been verified
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user is active
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user has agreed terms & conditions
	HasAgreed bool `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// AccessToken to authenticate user for next processes
	AccessToken string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken to refresh auth token
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// User roles
	Roles                *UserroleresultCollection `protobuf:"bytes,9,opt,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ChangePasswordResponse) Reset()         { *m = ChangePasswordResponse{} }
func (m *ChangePasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordResponse) ProtoMessage()    {}
func (*ChangePasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{14}
}

func (m *ChangePasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordResponse.Unmarshal(m, b)
}
func (m *ChangePasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordResponse.Marshal(b, m, deterministic)
}
func (m *ChangePasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordResponse.Merge(m, src)
}
func (m *ChangePasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordResponse.Size(m)
}
func (m *ChangePasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordResponse proto.InternalMessageInfo

func (m *ChangePasswordResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChangePasswordResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ChangePasswordResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChangePasswordResponse) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *ChangePasswordResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *ChangePasswordResponse) GetHasAgreed() bool {
	if m != nil {
		return m.HasAgreed
	}
	return false
}

func (m *ChangePasswordResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ChangePasswordResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *ChangePasswordResponse) GetRoles() *UserroleresultCollection {
	if m != nil {
		return m.Roles
	}
	return nil
}

type LoginRequest struct {
	// User email
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// User password
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{15}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type LoginResponse struct {
	// User UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If user has been verified
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user is active
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user has agreed terms & conditions
	HasAgreed bool `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// AccessToken to authenticate user for next processes
	AccessToken string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken to refresh auth token
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// User roles
	Roles                *UserroleresultCollection `protobuf:"bytes,9,opt,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{16}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LoginResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginResponse) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *LoginResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *LoginResponse) GetHasAgreed() bool {
	if m != nil {
		return m.HasAgreed
	}
	return false
}

func (m *LoginResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *LoginResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *LoginResponse) GetRoles() *UserroleresultCollection {
	if m != nil {
		return m.Roles
	}
	return nil
}

type RefreshAccessTokenRequest struct {
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshAccessTokenRequest) Reset()         { *m = RefreshAccessTokenRequest{} }
func (m *RefreshAccessTokenRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshAccessTokenRequest) ProtoMessage()    {}
func (*RefreshAccessTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{17}
}

func (m *RefreshAccessTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshAccessTokenRequest.Unmarshal(m, b)
}
func (m *RefreshAccessTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshAccessTokenRequest.Marshal(b, m, deterministic)
}
func (m *RefreshAccessTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshAccessTokenRequest.Merge(m, src)
}
func (m *RefreshAccessTokenRequest) XXX_Size() int {
	return xxx_messageInfo_RefreshAccessTokenRequest.Size(m)
}
func (m *RefreshAccessTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshAccessTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshAccessTokenRequest proto.InternalMessageInfo

func (m *RefreshAccessTokenRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type RefreshAccessTokenResponse struct {
	// User UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If user has been verified
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user is active
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user has agreed terms & conditions
	HasAgreed bool `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// AccessToken to authenticate user for next processes
	AccessToken string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken to refresh auth token
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// User roles
	Roles                *UserroleresultCollection `protobuf:"bytes,9,opt,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RefreshAccessTokenResponse) Reset()         { *m = RefreshAccessTokenResponse{} }
func (m *RefreshAccessTokenResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshAccessTokenResponse) ProtoMessage()    {}
func (*RefreshAccessTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{18}
}

func (m *RefreshAccessTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshAccessTokenResponse.Unmarshal(m, b)
}
func (m *RefreshAccessTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshAccessTokenResponse.Marshal(b, m, deterministic)
}
func (m *RefreshAccessTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshAccessTokenResponse.Merge(m, src)
}
func (m *RefreshAccessTokenResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshAccessTokenResponse.Size(m)
}
func (m *RefreshAccessTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshAccessTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshAccessTokenResponse proto.InternalMessageInfo

func (m *RefreshAccessTokenResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RefreshAccessTokenResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RefreshAccessTokenResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RefreshAccessTokenResponse) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *RefreshAccessTokenResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *RefreshAccessTokenResponse) GetHasAgreed() bool {
	if m != nil {
		return m.HasAgreed
	}
	return false
}

func (m *RefreshAccessTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *RefreshAccessTokenResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *RefreshAccessTokenResponse) GetRoles() *UserroleresultCollection {
	if m != nil {
		return m.Roles
	}
	return nil
}

type LogoutRequest struct {
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{19}
}

func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (m *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(m, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type LogoutResponse struct {
	// Message type i.e. SUCCESS, ERROR
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Message description
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutResponse) Reset()         { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()    {}
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{20}
}

func (m *LogoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutResponse.Unmarshal(m, b)
}
func (m *LogoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutResponse.Marshal(b, m, deterministic)
}
func (m *LogoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutResponse.Merge(m, src)
}
func (m *LogoutResponse) XXX_Size() int {
	return xxx_messageInfo_LogoutResponse.Size(m)
}
func (m *LogoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutResponse proto.InternalMessageInfo

func (m *LogoutResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LogoutResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type ListUsersRequest struct {
	// User email for search
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User mobile number for search
	MobileNumber string `protobuf:"bytes,3,opt,name=mobile_number,json=mobileNumber,proto3" json:"mobile_number,omitempty"`
	// User name for search
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// If user is active
	IsActive string `protobuf:"bytes,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user is verified
	IsVerified string `protobuf:"bytes,7,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user has agreed
	HasAgreed string `protobuf:"bytes,8,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// User Role
	Role string `protobuf:"bytes,9,opt,name=role,proto3" json:"role,omitempty"`
	// Page Number for search
	PageNumber int32 `protobuf:"zigzag32,10,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	// pageSize per page
	PageSize int32 `protobuf:"zigzag32,11,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Tenant Header Name
	Tenant               string   `protobuf:"bytes,13,opt,name=tenant,proto3" json:"tenant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUsersRequest) Reset()         { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()    {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{21}
}

func (m *ListUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersRequest.Unmarshal(m, b)
}
func (m *ListUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersRequest.Marshal(b, m, deterministic)
}
func (m *ListUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersRequest.Merge(m, src)
}
func (m *ListUsersRequest) XXX_Size() int {
	return xxx_messageInfo_ListUsersRequest.Size(m)
}
func (m *ListUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersRequest proto.InternalMessageInfo

func (m *ListUsersRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ListUsersRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *ListUsersRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListUsersRequest) GetIsActive() string {
	if m != nil {
		return m.IsActive
	}
	return ""
}

func (m *ListUsersRequest) GetIsVerified() string {
	if m != nil {
		return m.IsVerified
	}
	return ""
}

func (m *ListUsersRequest) GetHasAgreed() string {
	if m != nil {
		return m.HasAgreed
	}
	return ""
}

func (m *ListUsersRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *ListUsersRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *ListUsersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListUsersRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

type ListUsersResponse struct {
	// User Results
	Results *UserresultCollection `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"`
	// Pagination information
	PageInfo             *Pageinfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListUsersResponse) Reset()         { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()    {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{22}
}

func (m *ListUsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUsersResponse.Unmarshal(m, b)
}
func (m *ListUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUsersResponse.Marshal(b, m, deterministic)
}
func (m *ListUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUsersResponse.Merge(m, src)
}
func (m *ListUsersResponse) XXX_Size() int {
	return xxx_messageInfo_ListUsersResponse.Size(m)
}
func (m *ListUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUsersResponse proto.InternalMessageInfo

func (m *ListUsersResponse) GetResults() *UserresultCollection {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListUsersResponse) GetPageInfo() *Pageinfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

type UserresultCollection struct {
	Field                []*Userresult `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UserresultCollection) Reset()         { *m = UserresultCollection{} }
func (m *UserresultCollection) String() string { return proto.CompactTextString(m) }
func (*UserresultCollection) ProtoMessage()    {}
func (*UserresultCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{23}
}

func (m *UserresultCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserresultCollection.Unmarshal(m, b)
}
func (m *UserresultCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserresultCollection.Marshal(b, m, deterministic)
}
func (m *UserresultCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserresultCollection.Merge(m, src)
}
func (m *UserresultCollection) XXX_Size() int {
	return xxx_messageInfo_UserresultCollection.Size(m)
}
func (m *UserresultCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_UserresultCollection.DiscardUnknown(m)
}

var xxx_messageInfo_UserresultCollection proto.InternalMessageInfo

func (m *UserresultCollection) GetField() []*Userresult {
	if m != nil {
		return m.Field
	}
	return nil
}

type Userresult struct {
	// User UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// User name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// If user has been verified
	IsVerified bool `protobuf:"varint,4,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	// If user is active
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// If user has agreed terms & conditions
	HasAgreed bool `protobuf:"varint,6,opt,name=has_agreed,json=hasAgreed,proto3" json:"has_agreed,omitempty"`
	// AccessToken to authenticate user for next processes
	AccessToken string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken to refresh auth token
	RefreshToken string `protobuf:"bytes,8,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// User roles
	Roles                *UserroleresultCollection `protobuf:"bytes,9,opt,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Userresult) Reset()         { *m = Userresult{} }
func (m *Userresult) String() string { return proto.CompactTextString(m) }
func (*Userresult) ProtoMessage()    {}
func (*Userresult) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{24}
}

func (m *Userresult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Userresult.Unmarshal(m, b)
}
func (m *Userresult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Userresult.Marshal(b, m, deterministic)
}
func (m *Userresult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Userresult.Merge(m, src)
}
func (m *Userresult) XXX_Size() int {
	return xxx_messageInfo_Userresult.Size(m)
}
func (m *Userresult) XXX_DiscardUnknown() {
	xxx_messageInfo_Userresult.DiscardUnknown(m)
}

var xxx_messageInfo_Userresult proto.InternalMessageInfo

func (m *Userresult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Userresult) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Userresult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Userresult) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *Userresult) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Userresult) GetHasAgreed() bool {
	if m != nil {
		return m.HasAgreed
	}
	return false
}

func (m *Userresult) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Userresult) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *Userresult) GetRoles() *UserroleresultCollection {
	if m != nil {
		return m.Roles
	}
	return nil
}

type Pageinfo struct {
	// Page Number for returned resultset
	PageNumber int32 `protobuf:"zigzag32,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	// Page size for returned resultset
	PageSize int32 `protobuf:"zigzag32,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Count of returned record set
	Count int32 `protobuf:"zigzag32,3,opt,name=count,proto3" json:"count,omitempty"`
	// Total Count for this query
	TotalCount           int64    `protobuf:"zigzag64,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pageinfo) Reset()         { *m = Pageinfo{} }
func (m *Pageinfo) String() string { return proto.CompactTextString(m) }
func (*Pageinfo) ProtoMessage()    {}
func (*Pageinfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{25}
}

func (m *Pageinfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pageinfo.Unmarshal(m, b)
}
func (m *Pageinfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pageinfo.Marshal(b, m, deterministic)
}
func (m *Pageinfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pageinfo.Merge(m, src)
}
func (m *Pageinfo) XXX_Size() int {
	return xxx_messageInfo_Pageinfo.Size(m)
}
func (m *Pageinfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Pageinfo.DiscardUnknown(m)
}

var xxx_messageInfo_Pageinfo proto.InternalMessageInfo

func (m *Pageinfo) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *Pageinfo) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *Pageinfo) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Pageinfo) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func init() {
	proto.RegisterType((*SignupRequest)(nil), "user_service.SignupRequest")
	proto.RegisterType((*SignupResponse)(nil), "user_service.SignupResponse")
	proto.RegisterType((*UserroleresultCollection)(nil), "user_service.UserroleresultCollection")
	proto.RegisterType((*Userroleresult)(nil), "user_service.Userroleresult")
	proto.RegisterType((*Roleresult)(nil), "user_service.Roleresult")
	proto.RegisterType((*VerifyConfirmationTokenRequest)(nil), "user_service.VerifyConfirmationTokenRequest")
	proto.RegisterType((*VerifyConfirmationTokenResponse)(nil), "user_service.VerifyConfirmationTokenResponse")
	proto.RegisterType((*UpdateUsernameRequest)(nil), "user_service.UpdateUsernameRequest")
	proto.RegisterType((*UpdateUsernameResponse)(nil), "user_service.UpdateUsernameResponse")
	proto.RegisterType((*VerifyPasswordResetTokenRequest)(nil), "user_service.VerifyPasswordResetTokenRequest")
	proto.RegisterType((*VerifyPasswordResetTokenResponse)(nil), "user_service.VerifyPasswordResetTokenResponse")
	proto.RegisterType((*ResetPasswordRequest)(nil), "user_service.ResetPasswordRequest")
	proto.RegisterType((*ResetPasswordResponse)(nil), "user_service.ResetPasswordResponse")
	proto.RegisterType((*ChangePasswordRequest)(nil), "user_service.ChangePasswordRequest")
	proto.RegisterType((*ChangePasswordResponse)(nil), "user_service.ChangePasswordResponse")
	proto.RegisterType((*LoginRequest)(nil), "user_service.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "user_service.LoginResponse")
	proto.RegisterType((*RefreshAccessTokenRequest)(nil), "user_service.RefreshAccessTokenRequest")
	proto.RegisterType((*RefreshAccessTokenResponse)(nil), "user_service.RefreshAccessTokenResponse")
	proto.RegisterType((*LogoutRequest)(nil), "user_service.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "user_service.LogoutResponse")
	proto.RegisterType((*ListUsersRequest)(nil), "user_service.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "user_service.ListUsersResponse")
	proto.RegisterType((*UserresultCollection)(nil), "user_service.UserresultCollection")
	proto.RegisterType((*Userresult)(nil), "user_service.Userresult")
	proto.RegisterType((*Pageinfo)(nil), "user_service.Pageinfo")
}

func init() { proto.RegisterFile("user_service.proto", fileDescriptor_292f630cd9eb4c90) }

var fileDescriptor_292f630cd9eb4c90 = []byte{
	// 1070 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcd, 0x6f, 0xe3, 0x44,
	0x14, 0x97, 0xdd, 0x24, 0x4d, 0x5e, 0x3e, 0xb4, 0x1d, 0xa5, 0x5d, 0xe3, 0xee, 0x6e, 0x43, 0x8a,
	0xd8, 0x1c, 0x76, 0x2b, 0x94, 0x5e, 0x38, 0x2c, 0x12, 0x25, 0x08, 0xa9, 0xa2, 0x5a, 0xad, 0x5c,
	0x16, 0xad, 0xe0, 0x10, 0xb9, 0xce, 0x24, 0x1d, 0xe1, 0xd8, 0xc6, 0xe3, 0x14, 0x75, 0x2f, 0x70,
	0x40, 0xfc, 0x0b, 0x9c, 0xb8, 0x83, 0x04, 0x37, 0x38, 0x70, 0x81, 0x7f, 0x6d, 0x35, 0x1f, 0x4e,
	0x3c, 0x13, 0x3b, 0xae, 0x7a, 0xce, 0xcd, 0xf3, 0xbe, 0xe6, 0xf9, 0xf7, 0x7b, 0xcf, 0xf3, 0xc6,
	0x80, 0x16, 0x14, 0xc7, 0x63, 0x8a, 0xe3, 0x1b, 0xe2, 0xe1, 0x93, 0x28, 0x0e, 0x93, 0x10, 0xb5,
	0xb2, 0xb2, 0xfe, 0x27, 0xd0, 0xbe, 0x24, 0xb3, 0x60, 0x11, 0x39, 0xf8, 0xfb, 0x05, 0xa6, 0x09,
	0xea, 0x42, 0x15, 0xcf, 0x5d, 0xe2, 0x5b, 0x46, 0xcf, 0x18, 0x34, 0x1c, 0xb1, 0x40, 0x07, 0x50,
	0x4b, 0x70, 0xe0, 0x06, 0x89, 0x65, 0x72, 0xb1, 0x5c, 0xf5, 0xff, 0x32, 0xa1, 0x93, 0xfa, 0xd3,
	0x28, 0x0c, 0x28, 0x46, 0x1d, 0x30, 0xc9, 0x44, 0x7a, 0x9b, 0x64, 0xb2, 0x0a, 0x68, 0x66, 0x03,
	0x22, 0xa8, 0x04, 0xee, 0x1c, 0x5b, 0x3b, 0x5c, 0xc8, 0x9f, 0xd1, 0x11, 0x34, 0x09, 0x1d, 0xdf,
	0xe0, 0x98, 0x4c, 0x09, 0x9e, 0x58, 0x95, 0x9e, 0x31, 0xa8, 0x3b, 0x40, 0xe8, 0xd7, 0x52, 0x82,
	0x0e, 0xa1, 0x41, 0xe8, 0xd8, 0xf5, 0x12, 0x72, 0x83, 0xad, 0x2a, 0x57, 0xd7, 0x09, 0x3d, 0xe3,
	0x6b, 0xf4, 0x18, 0xe0, 0xda, 0xa5, 0x63, 0x77, 0x16, 0x63, 0x3c, 0xb1, 0x6a, 0x5c, 0xdb, 0xb8,
	0x76, 0xe9, 0x19, 0x17, 0xa0, 0xf7, 0xa1, 0xe5, 0x7a, 0x1e, 0xa6, 0x74, 0x9c, 0x84, 0xdf, 0xe1,
	0xc0, 0xda, 0xe5, 0x1b, 0x37, 0x85, 0xec, 0x2b, 0x26, 0x42, 0xc7, 0xd0, 0x8e, 0xf1, 0x34, 0xc6,
	0xf4, 0x5a, 0xda, 0xd4, 0xb9, 0x4d, 0x4b, 0x0a, 0x85, 0xd1, 0x0b, 0xa8, 0xc6, 0xa1, 0x8f, 0xa9,
	0xd5, 0xe8, 0x19, 0x83, 0xe6, 0xf0, 0xc3, 0x13, 0x05, 0xe2, 0xd7, 0x14, 0xc7, 0x4c, 0x1d, 0x63,
	0xba, 0xf0, 0x93, 0x51, 0xe8, 0xfb, 0xd8, 0x4b, 0x48, 0x18, 0x38, 0xc2, 0xa9, 0xff, 0x12, 0xac,
	0x22, 0x13, 0x34, 0x84, 0xea, 0x94, 0x60, 0x9f, 0x61, 0xb7, 0x33, 0x68, 0x0e, 0x1f, 0x6d, 0x8a,
	0xec, 0x08, 0xd3, 0xfe, 0x6f, 0x06, 0x74, 0x54, 0xcd, 0x1a, 0xfe, 0x0f, 0x61, 0x97, 0x07, 0x22,
	0x93, 0x94, 0x3b, 0xb6, 0x3c, 0xe7, 0x0a, 0xe6, 0xc6, 0x14, 0x82, 0x85, 0x1a, 0x5b, 0x9e, 0x6b,
	0x30, 0x57, 0x34, 0x98, 0x9f, 0x41, 0x85, 0x99, 0x71, 0xf8, 0x9b, 0x43, 0x4b, 0x4d, 0xd2, 0x59,
	0x25, 0xc8, 0xad, 0xfa, 0x3e, 0x80, 0x53, 0x9c, 0x5a, 0x5a, 0x04, 0x66, 0xa6, 0x08, 0x1e, 0x03,
	0xc8, 0x68, 0xab, 0xc4, 0x1a, 0x52, 0x52, 0x92, 0x5b, 0xff, 0x27, 0x03, 0x9e, 0xf0, 0x62, 0xb9,
	0x1d, 0x85, 0xc1, 0x94, 0xc4, 0x73, 0x97, 0x01, 0xcb, 0x79, 0x4b, 0xcb, 0x3b, 0x83, 0x86, 0xa1,
	0xa0, 0xf1, 0x1c, 0x90, 0x97, 0x71, 0x92, 0x15, 0xc0, 0x32, 0xab, 0x38, 0x7b, 0x9e, 0x1e, 0x2e,
	0xd3, 0x10, 0x3b, 0x4a, 0x43, 0xfc, 0x67, 0xc2, 0x51, 0x61, 0x0a, 0xdb, 0x0e, 0x29, 0xef, 0x90,
	0x11, 0xec, 0xbf, 0x8e, 0x26, 0x6e, 0x82, 0x99, 0x21, 0x7b, 0xe9, 0x94, 0xb9, 0xbc, 0x62, 0x29,
	0x62, 0xe1, 0x1f, 0x13, 0x0e, 0xf4, 0x28, 0x5b, 0xf0, 0xcb, 0xc1, 0xff, 0xd9, 0x48, 0xab, 0xf7,
	0x95, 0x4b, 0xe9, 0x0f, 0x61, 0x3c, 0x71, 0x30, 0xc5, 0xc9, 0xdd, 0x3a, 0xe8, 0x23, 0xe8, 0x46,
	0xd2, 0x6b, 0x1c, 0x33, 0x37, 0xa5, 0x87, 0x50, 0xb4, 0x16, 0xb1, 0x90, 0xbe, 0xff, 0x4d, 0xe8,
	0x15, 0xa7, 0xb1, 0x25, 0xb2, 0x9c, 0xc8, 0xcf, 0xa1, 0xcb, 0x21, 0x5b, 0xe1, 0x77, 0x9f, 0xd3,
	0xfd, 0x6f, 0x13, 0xf6, 0xb5, 0x30, 0x5b, 0xf0, 0xcb, 0xc1, 0xff, 0x12, 0xf6, 0x47, 0xd7, 0x6e,
	0x30, 0xc3, 0x3a, 0xfa, 0x36, 0xd4, 0xd3, 0x2e, 0x90, 0x40, 0x2d, 0xd7, 0x1b, 0x3f, 0x65, 0x7a,
	0xb4, 0x2d, 0x09, 0xe5, 0x24, 0xbc, 0x81, 0xd6, 0x45, 0x38, 0x23, 0xc1, 0xe6, 0xca, 0xbf, 0x0f,
	0x23, 0x7f, 0x9a, 0xd0, 0x96, 0xa1, 0xb7, 0x44, 0x94, 0x13, 0x71, 0x0a, 0xef, 0x39, 0x22, 0xda,
	0xd9, 0x6a, 0xe3, 0x94, 0x95, 0xa2, 0x2f, 0xcf, 0xbf, 0x26, 0xd8, 0x79, 0x5e, 0x5b, 0xc0, 0xcb,
	0x01, 0x7f, 0xca, 0xcb, 0x33, 0x5c, 0x24, 0x65, 0x20, 0x7f, 0x0c, 0x9d, 0xd4, 0x50, 0xe2, 0x8a,
	0xa0, 0x92, 0xdc, 0x46, 0x58, 0x22, 0xcb, 0x9f, 0x99, 0x6c, 0x82, 0xa9, 0x97, 0xce, 0x5d, 0xec,
	0xb9, 0xff, 0xbb, 0x09, 0x0f, 0x2e, 0x08, 0x4d, 0x58, 0x2a, 0x74, 0xad, 0xc3, 0x14, 0x12, 0x8e,
	0xa1, 0x3d, 0x0f, 0xaf, 0x88, 0x8f, 0xc7, 0xc1, 0x62, 0x7e, 0x85, 0x63, 0xc9, 0x46, 0x4b, 0x08,
	0x5f, 0x72, 0xd9, 0x92, 0xa9, 0x4a, 0x86, 0x29, 0x85, 0x88, 0x9a, 0xe8, 0xcd, 0x25, 0x11, 0x1a,
	0x8d, 0x02, 0xe8, 0x2c, 0x8d, 0x2a, 0x53, 0x02, 0xe4, 0x0c, 0x53, 0x48, 0xde, 0x62, 0x1a, 0x62,
	0x43, 0xf6, 0xcc, 0x62, 0x46, 0xee, 0x6c, 0x99, 0x27, 0xf4, 0x8c, 0xc1, 0x9e, 0x03, 0x4c, 0x24,
	0xb3, 0x3c, 0x84, 0x06, 0x37, 0xa0, 0xe4, 0x2d, 0xb6, 0x9a, 0x5c, 0x5d, 0x67, 0x82, 0x4b, 0xf2,
	0x36, 0x3b, 0x8a, 0xb6, 0x15, 0x90, 0x7f, 0x31, 0x60, 0x2f, 0x03, 0x95, 0x04, 0xfa, 0x05, 0xec,
	0x0a, 0xfa, 0x28, 0xc7, 0xba, 0x39, 0xec, 0xe7, 0x70, 0xac, 0xf3, 0x9b, 0xba, 0xa0, 0x53, 0x99,
	0x08, 0x09, 0xa6, 0x21, 0x47, 0xbb, 0x39, 0x3c, 0x50, 0xfd, 0x5f, 0xb9, 0x33, 0xcc, 0xb4, 0x22,
	0xc1, 0xf3, 0x60, 0x1a, 0xf6, 0xbf, 0x80, 0x6e, 0x5e, 0x54, 0x74, 0xa2, 0x5e, 0x3b, 0xad, 0xa2,
	0x44, 0xd2, 0x2b, 0xe7, 0x1f, 0x26, 0xc0, 0x4a, 0xba, 0x6d, 0xc5, 0x4d, 0xad, 0xf8, 0x23, 0xd4,
	0x53, 0x26, 0xf4, 0xf2, 0x32, 0x36, 0x97, 0x97, 0xa9, 0x95, 0x57, 0x17, 0xaa, 0x5e, 0xb8, 0x90,
	0x67, 0xd1, 0x9e, 0x23, 0x16, 0x2c, 0x66, 0x12, 0x26, 0xae, 0x3f, 0x16, 0x3a, 0x06, 0x21, 0x72,
	0x80, 0x8b, 0x46, 0x4c, 0x32, 0xfc, 0x75, 0x17, 0x9a, 0x2c, 0xc9, 0x4b, 0x91, 0x30, 0x1a, 0x41,
	0x4d, 0xfc, 0xae, 0x41, 0x87, 0xea, 0x9b, 0x28, 0x3f, 0x81, 0xec, 0x47, 0xf9, 0x4a, 0x59, 0xbc,
	0x37, 0xf0, 0xb0, 0xe0, 0x8a, 0x8b, 0x9e, 0xa9, 0x8e, 0x9b, 0x2f, 0xe3, 0xf6, 0xf3, 0x3b, 0x5a,
	0xcb, 0x7d, 0xbf, 0x85, 0x8e, 0x7a, 0xa9, 0x43, 0xc7, 0x1a, 0x1d, 0x79, 0x17, 0x47, 0xfb, 0x83,
	0xcd, 0x46, 0x32, 0xf8, 0x2d, 0x58, 0x45, 0x57, 0x0e, 0x94, 0x9b, 0x67, 0xe1, 0x0d, 0xc9, 0x3e,
	0xb9, 0xab, 0xb9, 0xdc, 0xfa, 0x0d, 0xb4, 0x95, 0x29, 0x1b, 0x69, 0x1f, 0x83, 0xbc, 0x49, 0xde,
	0x3e, 0xde, 0x68, 0xb3, 0x42, 0x4c, 0x9d, 0x1d, 0x75, 0xc4, 0x72, 0xe7, 0x54, 0x1d, 0xb1, 0x82,
	0xf1, 0xf3, 0x53, 0xa8, 0xf2, 0x31, 0x08, 0xd9, 0xaa, 0x79, 0x76, 0xec, 0xb2, 0x0f, 0x73, 0x75,
	0x32, 0xc2, 0x0c, 0xd0, 0xfa, 0x21, 0x8f, 0x9e, 0xea, 0x6f, 0x56, 0x30, 0x3c, 0xd8, 0x83, 0x72,
	0x43, 0xb9, 0xd1, 0x08, 0x6a, 0xe2, 0xa4, 0x43, 0xeb, 0xf9, 0xac, 0x0e, 0x4a, 0xbd, 0xec, 0xb5,
	0xc3, 0xf1, 0x02, 0x1a, 0xcb, 0x0f, 0x39, 0x7a, 0xa2, 0x99, 0x6a, 0x87, 0xa1, 0x7d, 0x54, 0xa8,
	0x17, 0xd1, 0x3e, 0x7b, 0xf0, 0x4d, 0x27, 0x6b, 0x11, 0x5d, 0x5d, 0xd5, 0xf8, 0xff, 0xd9, 0xd3,
	0x77, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe6, 0xe3, 0x97, 0x45, 0xb5, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	// Signup implements signup.
	Signup(ctx context.Context, in *SignupRequest, opts ...grpc.CallOption) (*SignupResponse, error)
	// VerifyConfirmationToken implements verifyConfirmationToken.
	VerifyConfirmationToken(ctx context.Context, in *VerifyConfirmationTokenRequest, opts ...grpc.CallOption) (*VerifyConfirmationTokenResponse, error)
	// UpdateUsername implements updateUsername.
	UpdateUsername(ctx context.Context, in *UpdateUsernameRequest, opts ...grpc.CallOption) (*UpdateUsernameResponse, error)
	// VerifyPasswordResetToken implements verifyPasswordResetToken.
	VerifyPasswordResetToken(ctx context.Context, in *VerifyPasswordResetTokenRequest, opts ...grpc.CallOption) (*VerifyPasswordResetTokenResponse, error)
	// ResetPassword implements resetPassword.
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error)
	// ChangePassword implements changePassword.
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error)
	// Login implements login.
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	// RefreshAccessToken implements refreshAccessToken.
	RefreshAccessToken(ctx context.Context, in *RefreshAccessTokenRequest, opts ...grpc.CallOption) (*RefreshAccessTokenResponse, error)
	// Logout implements logout.
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
	// ListUsers implements listUsers.
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Signup(ctx context.Context, in *SignupRequest, opts ...grpc.CallOption) (*SignupResponse, error) {
	out := new(SignupResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/Signup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) VerifyConfirmationToken(ctx context.Context, in *VerifyConfirmationTokenRequest, opts ...grpc.CallOption) (*VerifyConfirmationTokenResponse, error) {
	out := new(VerifyConfirmationTokenResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/VerifyConfirmationToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUsername(ctx context.Context, in *UpdateUsernameRequest, opts ...grpc.CallOption) (*UpdateUsernameResponse, error) {
	out := new(UpdateUsernameResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/UpdateUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) VerifyPasswordResetToken(ctx context.Context, in *VerifyPasswordResetTokenRequest, opts ...grpc.CallOption) (*VerifyPasswordResetTokenResponse, error) {
	out := new(VerifyPasswordResetTokenResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/VerifyPasswordResetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error) {
	out := new(ResetPasswordResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/ResetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*ChangePasswordResponse, error) {
	out := new(ChangePasswordResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) RefreshAccessToken(ctx context.Context, in *RefreshAccessTokenRequest, opts ...grpc.CallOption) (*RefreshAccessTokenResponse, error) {
	out := new(RefreshAccessTokenResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/RefreshAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := c.cc.Invoke(ctx, "/user_service.UserService/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	// Signup implements signup.
	Signup(context.Context, *SignupRequest) (*SignupResponse, error)
	// VerifyConfirmationToken implements verifyConfirmationToken.
	VerifyConfirmationToken(context.Context, *VerifyConfirmationTokenRequest) (*VerifyConfirmationTokenResponse, error)
	// UpdateUsername implements updateUsername.
	UpdateUsername(context.Context, *UpdateUsernameRequest) (*UpdateUsernameResponse, error)
	// VerifyPasswordResetToken implements verifyPasswordResetToken.
	VerifyPasswordResetToken(context.Context, *VerifyPasswordResetTokenRequest) (*VerifyPasswordResetTokenResponse, error)
	// ResetPassword implements resetPassword.
	ResetPassword(context.Context, *ResetPasswordRequest) (*ResetPasswordResponse, error)
	// ChangePassword implements changePassword.
	ChangePassword(context.Context, *ChangePasswordRequest) (*ChangePasswordResponse, error)
	// Login implements login.
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	// RefreshAccessToken implements refreshAccessToken.
	RefreshAccessToken(context.Context, *RefreshAccessTokenRequest) (*RefreshAccessTokenResponse, error)
	// Logout implements logout.
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
	// ListUsers implements listUsers.
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Signup(ctx, req.(*SignupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_VerifyConfirmationToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyConfirmationTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).VerifyConfirmationToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/VerifyConfirmationToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).VerifyConfirmationToken(ctx, req.(*VerifyConfirmationTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/UpdateUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUsername(ctx, req.(*UpdateUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_VerifyPasswordResetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyPasswordResetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).VerifyPasswordResetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/VerifyPasswordResetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).VerifyPasswordResetToken(ctx, req.(*VerifyPasswordResetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_RefreshAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshAccessTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RefreshAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/RefreshAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RefreshAccessToken(ctx, req.(*RefreshAccessTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_service.UserService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_service.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Signup",
			Handler:    _UserService_Signup_Handler,
		},
		{
			MethodName: "VerifyConfirmationToken",
			Handler:    _UserService_VerifyConfirmationToken_Handler,
		},
		{
			MethodName: "UpdateUsername",
			Handler:    _UserService_UpdateUsername_Handler,
		},
		{
			MethodName: "VerifyPasswordResetToken",
			Handler:    _UserService_VerifyPasswordResetToken_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _UserService_ResetPassword_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _UserService_ChangePassword_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UserService_Login_Handler,
		},
		{
			MethodName: "RefreshAccessToken",
			Handler:    _UserService_RefreshAccessToken_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _UserService_Logout_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _UserService_ListUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_service.proto",
}
